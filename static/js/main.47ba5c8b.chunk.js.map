{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","aboutText","onClick","toggleMode","role","htmlFor","text","TextForm","useState","setText","style","color","heading","backgroundColor","onChange","event","console","log","target","value","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","split","join","length","Alert","alert","word","lower","charAt","slice","capitalize","msg","defaultProps","App","setMode","setAlert","message","setTimeout","body","setInterval","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.47ba5c8b.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import {Link} from \"react-router-dom\";\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\">{props.aboutText}</a>\r\n              </li>\r\n              \r\n             </ul>\r\n            {/* <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n              <button className=\"btn btn-outline-danger\" type=\"submit\">Search</button>\r\n            </form> */}\r\n            {/* <form className=\"form-check form-switch text-light\">\r\n              <input className=\"form-check-input\" type=\"checkbox\" id='flexSwitchCheckDefault' />\r\n              <label className=\"form-check-lable\" for=\"flewSwitchCheckDefault\">Enable DarkMode</label>\r\n            </form> */}\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n                <label className=\"form-check-label\"  htmlFor=\"flexSwitchCheckDefault\">{props.text} Dark Mode</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title : 'Set title here',\r\n    aboutText: 'Set about text here'\r\n}","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () => {\r\n        console.log(\"Uppercase was clicked!\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Uppercase\", \"info\");\r\n    }\r\n    const handleDownClick = () => {\r\n        console.log(\"LowerCase was clicked!\" + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Lowercase\", \"warning\");\r\n    }\r\n    const handleClearClick = () => {\r\n        console.log(\"LowerCase was clicked!\" + text);\r\n        let newText = '';\r\n        setText(newText);\r\n        props.showAlert(\"Textbox has been cleared\", \"danger\");\r\n    }\r\n    const handleOnChange = (event) => {\r\n        console.log(\"On change!\");\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra spaces has been removed\",\"success\");\r\n    }\r\n\r\n    const handleCopy = () => {\r\n        console.log(\"I am copy\");\r\n        var text = document.getElementById(\"exampleFormControlTextarea1\");\r\n        text.select();\r\n        text.setSelectionRange(0, 9999);\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Text has been copied to clipboard\", \"secondary\");\r\n    }\r\n    const [text, setText] = useState('Enter text here');\r\n    // setText(\"Dont enter text here\");\r\n    return (\r\n        <>\r\n        <div className='container' style={{color : props.mode==='dark'?'white':'#4f16df'}}>\r\n            <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" style={{backgroundColor : props.mode==='dark'?'#130a29':'white', color: props.mode==='dark'?'white':'black'}} onChange={handleOnChange} value={text} id=\"exampleFormControlTextarea1\" rows=\"7\"></textarea>\r\n        </div>\r\n        <button className=\"btn btn-info mx-2\" onClick={handleUpClick}  >Convert to Uppercase</button>\r\n        <button className=\"btn btn-warning mx-1\" onClick={handleDownClick}  >Convert to Lowercase</button>\r\n        <button className=\"btn btn-danger mx-2\" onClick={handleClearClick}  >Click to Clear Text</button>\r\n        <button className=\"btn btn-secondary mx-2\" onClick={handleCopy}  >Click to Copy Text to clipboard</button>\r\n        <button className=\"btn btn-success mx-2\" onClick={handleExtraSpaces}  >Click to Remove Extra Spaces.</button>\r\n    </div>\r\n    <div className=\"className my-3\" style={{color : props.mode==='dark'?'white':'#130a29'}}>\r\n        <h1>Your text summary</h1>\r\n        <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n        <p>{0.008 * text.split(\" \").length} minutes to read.</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:\"Enter something in the textbox above to preview it here.\"}</p> \r\n    </div>\r\n    </>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word) => {\r\n        const lower = word.toLowerCase()\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n            <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n    </div>\r\n    )\r\n}\r\n\r\n","// import logo from './logo.svg';\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, {useState} from 'react';\nimport Alert from './components/Alert';\n// import {\n//     BrowserRouter as Router,\n//     Routes,\n//     Route,\n    \n    \n// } from \"react-router-dom\";\n\n\n\n\n\n// let name = \"Abhi\";\n\nfunction App() {\n  const [mode, setMode] = useState('light'); // whether dark mode is enabled or not\n  const [text, setText] = useState('Enable');\n  const [alert, setAlert]  = useState(null);\n\n  const showAlert = (message, type) => {\n      setAlert({\n        msg: message,\n        type : type\n      })\n      setTimeout(() => {\n        setAlert(null)\n      }, 2000);\n  }\n  \n  const toggleMode = () => {\n    if(mode === 'light') {\n      setMode('dark');\n      setText('Disable');\n      document.body.style.backgroundColor = '#130a29';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title = \"TextUtils - Dark Mode\";\n      // document.body.style.color = 'white';\n      setInterval(() => {\n        document.title = \"TextUtils is Amazing Mode\";\n      }, 3500);\n      setInterval(() => {\n        document.title = \"Install TextUtils Now\";\n      }, 1500)\n    }\n    else {\n      setMode('light');\n      setText('Enable');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n      document.title = \"TextUtils - Light Mode\";\n      // document.body.style.color = 'black';\n    }\n  }\n  return (\n    <>\n   {/* <Navbar /> */}\n   {/* <Router> */}\n\n   <Navbar title= \"TextUtils\" text = {text} toggleMode = {toggleMode} aboutText = \"About-us\" mode = {mode} />\n   <Alert alert = {alert} />\n   <div className=\"container my-3\">\n   {/* <Routes>\n          <Route exact path=\"/about\" element={<About mode = {mode} />} />\n            \n        \n          <Route exact path=\"/\" element={  <TextForm showAlert = {showAlert} heading = \"Enter the text to analyze below\" mode={mode} /> } /> */}\n              <TextForm showAlert = {showAlert} heading = \"Enter the text to analyze below\" mode={mode} />\n          \n  {/* </Routes> */}\n  </div>\n  {/* </Router> */}\n</>\n   \n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}